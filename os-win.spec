#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
# Source0 file verified with key 0x4F398DEAE440091C (infra-root@openstack.org)
#
Name     : os-win
Version  : 5.0.1
Release  : 37
URL      : http://tarballs.openstack.org/os-win/os-win-5.0.1.tar.gz
Source0  : http://tarballs.openstack.org/os-win/os-win-5.0.1.tar.gz
Source1  : http://tarballs.openstack.org/os-win/os-win-5.0.1.tar.gz.asc
Summary  : Windows / Hyper-V library for OpenStack projects.
Group    : Development/Tools
License  : Apache-2.0
Requires: os-win-license = %{version}-%{release}
Requires: os-win-python = %{version}-%{release}
Requires: os-win-python3 = %{version}-%{release}
Requires: Babel
Requires: eventlet
Requires: oslo.concurrency
Requires: oslo.config
Requires: oslo.i18n
Requires: oslo.log
Requires: oslo.utils
Requires: pbr
BuildRequires : Babel
BuildRequires : buildreq-distutils3
BuildRequires : eventlet
BuildRequires : oslo.concurrency
BuildRequires : oslo.config
BuildRequires : oslo.i18n
BuildRequires : oslo.log
BuildRequires : oslo.utils
BuildRequires : pbr

%description
========================
Team and repository tags
========================

.. image:: https://governance.openstack.org/tc/badges/os-win.svg
    :target: https://governance.openstack.org/tc/reference/tags/index.html

.. Change things from this point on

======
os-win
======

Windows / Hyper-V library for OpenStack projects.

This library contains Windows / Hyper-V specific code commonly used in
OpenStack projects. The library can be used in any other OpenStack projects
where it is needed.

* Free software: Apache license
* Documentation: http://docs.openstack.org/developer/os-win
* Source: https://opendev.org/openstack/os-win
* Bugs: https://bugs.launchpad.net/os-win

Release Notes
-------------

* https://docs.openstack.org/releasenotes/os-win

How to Install
--------------

os-win is released on Pypi, meaning that it can be installed and upgraded via
pip. To install os-win, run the following command:

::

    pip install os-win

To upgrade os-win, run the following command:

::

    pip install -U os-win

Note that the first OpenStack release to use os-win is Mitaka. Previous
releases do not benefit from this library.

Tests
-----

You will have to install the test dependencies first to be able to run the
tests.

::

    C:\os_win> pip install -r requirements.txt
    C:\os_win> pip install -r test-requirements.txt

You can run the unit tests with the following command.

::

    C:\os_win> nosetests os_win\tests\unit


How to contribute
-----------------

To contribute to this project, please go through the following steps.

1. Clone the project and keep your working tree updated.
2. Make modifications on your working tree.
3. Run unit tests.
4. If the tests pass, commit your code.
5. Submit your code via ``git review``.
6. Check that Jenkins and the Microsoft Hyper-V CI pass on your patch.
7. If there are issues with your commit, ammend, and submit it again via
   ``git review``.
8. Wait for the patch to be reviewed.


Features
--------

os-win is currently used in the following OpenStack projects:

* nova
* cinder
* compute-hyperv
* networking-hyperv
* ceilometer
* os-brick

%package license
Summary: license components for the os-win package.
Group: Default

%description license
license components for the os-win package.


%package python
Summary: python components for the os-win package.
Group: Default
Requires: os-win-python3 = %{version}-%{release}

%description python
python components for the os-win package.


%package python3
Summary: python3 components for the os-win package.
Group: Default
Requires: python3-core
Provides: pypi(os-win)

%description python3
python3 components for the os-win package.


%prep
%setup -q -n os-win-5.0.1
cd %{_builddir}/os-win-5.0.1

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1582910403
# -Werror is for werrorists
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FCFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export FFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=4 "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=4 "
export MAKEFLAGS=%{?_smp_mflags}
python3 setup.py build

%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/os-win
cp %{_builddir}/os-win-5.0.1/LICENSE %{buildroot}/usr/share/package-licenses/os-win/57aed0b0f74e63f6b85cce11bce29ba1710b422b
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/os-win/57aed0b0f74e63f6b85cce11bce29ba1710b422b

%files python
%defattr(-,root,root,-)

%files python3
%defattr(-,root,root,-)
/usr/lib/python3*/*
